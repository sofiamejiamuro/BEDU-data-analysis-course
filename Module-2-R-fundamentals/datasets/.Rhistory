2+2
install.packages("dplyr")
library(dplyr)
?mutate
print('Hola mundo en R')
orangeec <- read.csv("~/Desktop/projects/r/r/r-Fundamentals-Platzi/orangeec.csv", header=FALSE)
View(orangeec)
orangeec <- read.csv("~/Desktop/projects/r/r/r-Fundamentals-Platzi/orangeec.csv")
View(orangeec)
View(orangeec)
4 + 6
10 -5
10 -5
4 + 6
4^2
View(orangeec)
print('Hola Mundo en R')
print('Hola mundo desde R!!! ')
print('Hola mundo en R!!!')
print('Machine Learning ahí te voy')
x
x
x <- 86
x
Tiempo_al_dia
Tiempo_al_dia <- Oficina + Estudio + Ejercicio
Oficina <- 8
Estudio <- 3
Ejercicio <- 1
Tiempo_al_dia <- Oficina + Estudio + Ejercicio
Tiempo_al_dia
Resultado_1 <- 0.3
Actividad_2 <- 0.3
Actividad_3 <- 0.4
Nota_3 <- 3.0
Nota_2 <- 4.6
Nota_1 <- 4.0
Nota_a_1 <- Nota_1 * Actividad_1
Nota_a_1 <- Nota_1 * Actividad_1
Actividad_1 <- 0.3
Nota_a_1 <- Nota_1 * Actividad_1
Nota_a_1
Nota_a_2 <- Nota_2 * Actividad_2
Nota_a_2
Nota_a_3
Nota_a_3 <- Nota_3 * Actividad_3
Nota_a_3
Nota_final <- Nota_a_1 + Nota_a_2 + Nota_a_3
Nota_final
(var.number <- 5L)
(var.logical <- T)
(vector <- c(1,2))
version
class(var.number)
class(var.hola)
(var.hola <- "Hola Mundo")
class(var.hola)
class(var.double)
(var.double <- 2.7076)
(var.logical <- T)
(vector <- c(1,2))
class(var.logical)
a <- c(4, 6, 8, 10,12)
b <- c(3, 5, 7, 9)
length(a)
length(b)
a[1]
b[4]
summary(mifile)
x <- 6:8
y <- c("A", "B", "C")
(mifile <- data.frame(edad = x, grupo = y))
str(mifile)
mifile[1]
mifile[,1]
mifile$edad
mean(mifile$edad)
# Extrayendo información del df, se hace igual que con las matrices
mifile
mifile[1]
mifile[,1]
mifile$edad
mifile$grupo
mean(mifile$edad)
paste("La media de la edad es:", mean(mifile$edad))
media_edad <- mean(mifile$edad)
media_edad <- mean(mifile$edad)
media_edad
paste("La media de la edad es:", media_edad)
summary(mifile)
dim(mifile)
# Podemos agregar una columna extra con datos
#[1] 3 2 . 3 filas y 2 columnas
mifile$sexo <- c("H", "M", "H")
mifile
mifile$sexo <- NULL
mifile
getwd()
getwd()
setwd(/Users/sofiamejiamuro//Desktop/data-analysis-course/Modulo-2-R-Fundamentals)
setwd("/Users/sofiamejiamuro//Desktop/data-analysis-course/Modulo-2-R-Fundamentals")
getwd()
dir()
setwd("/Users/sofiamejiamuro//Desktop/data-analysis-course/datasets")
setwd("/Users/sofiamejiamuro//Desktop/data-analysis-course/Modulo-2-R-Fundamentals/datasets/")
dir()
dir()
setwd("/Users/sofiamejiamuro//Desktop/data-analysis-course/Modulo-2-R-Fundamentals/datasets/")
dir()
read.csv("best_sellers.csv")
best_sellers <- read.csv("~/Desktop/data-analysis-course/Modulo-2-R-Fundamentals/datasets/best_sellers.csv")
View(best_sellers)
amazon.books <- read.csv("best_sellers.csv")
tail(amazon.books)
# Las primeras 5 entradas
str(amazon.books)
head(amazon.books)
head(amazon.books)
# Las primeras 5 entradas
str(amazon.books)
head(amazon.books)
# Las últimas 5 entradas
tail(amazon.books)
songs <- read.csv("https://raw.githubusercontent.com/beduExpert/Programacion-con-R-2021/main/Sesion-01/Data/Top%20500%20Songs.csv")
songs
head(songs)
View(songs)
View(mifile)
View(best_sellers)
View(amazon.books)
tail(songs)
str(songs)
dim(songs)
dim(songs)
# Con el punto y coma
tail(songs); str(songs)
dim(best_sellers)
dim(best_sellers)
class(best_sellers)
str(best_sellers)
read.csv("https://raw.githubusercontent.com/ecoronadoj/Sesion_1/main/Data/netflix_titles.csv")
netflix
netflix <- read.csv("https://raw.githubusercontent.com/ecoronadoj/Sesion_1/main/Data/netflix_titles.csv")
netflix
dim(netflix)
class(netflix)
head(netflix)
netflix$release_year
read.csv("https://raw.githubusercontent.com/ecoronadoj/Sesion_1/main/Data/netflix_titles.csv")
View(netflix)
netflix$release_year
netflix$release_year
netflix$release_year > 2015
net.2015 <- netflix$release_year > 2015
net.2015
net.2015 <- netflix[netflix$release_year > 2015]
net.2015 <- netflix[netflix$release_year > 2015,]
net.2015
dim(net.2015)
#4. Escribir los resultados en un archivo .csv llamado res.netflix.csv (Hint: consulta la función write.csv)
write.csv(net.2015, "/Users/sofiamejiamuro/Desktop/data-analysis-course/Modulo-2-R-Fundamentals/session-1-R-Introduction/res.netflix.csv", row.names = FALSE)
View(netflix)
View(net.2015)
install.packages("ggplot2")
library(ggplot2)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
View(best_sellers)
dir()
amazon.best <- read.csv("best_sellers.csv")
amazon.best
#2. Calcula el data frame transpuesto, asígnale el nombre de tAmazon y conviértelo en un data frame (Hint: consulta la ayuda sobre las funciones t y as.data.frame)
t(amazon.best)
#2. Calcula el data frame transpuesto, asígnale el nombre de tAmazon y conviértelo en un data frame (Hint: consulta la ayuda sobre las funciones t y as.data.frame)
t(amazon.best)
tAmazon <- t(amazon.best)
tAmazon
as.data.frame(tAmazon, row.names = NULL, optional = FALSE)
is.data.frame(tAmazon)
View(tAmazon)
as.data.frame(tAmazon, row.names = NULL, optional = FALSE,
make.names = TRUE, …,
stringsAsFactors = default.stringsAsFactors())
as.data.frame(tAmazon, row.names = NULL, optional = FALSE,
make.names = TRUE,
stringsAsFactors = default.stringsAsFactors())
is.data.frame(tAmazon)
as.data.frame(tAmazon)
is.data.frame(tAmazon)
tAmazon <- data.frame(t(amazon.best))
is.data.frame(tAmazon)
View(tAmazon)
tAmazon2 <- data.frame(amazon.best)
tAmazon2
View(tAmazon2)
View(tAmazon)
View(songs)
View(tAmazon)
View(tAmazon)
View(tAmazon)
View(tAmazon2)
View(tAmazon2)
View(tAmazon)
View(tAmazon2)
View(tAmazon2)
View(tAmazon)
#3. Usa el nombre de los libros como el nombre de las columnas (Hint: consulta la documentación de names, tienes que hacer algo similar a names(dataframe) <- vector de nuevos nombres)
name(tAmazon) <- name
colnames(tamazon) <- tAmazon$Name
colnames(tAmazon) <- tAmazon$Name
View(songs)
View(tAmazon)
View(tAmazon)
which.max(tAmazon['Price',])
#4. ¿Cúal es el libro de menor y mayor precio?
which.min(tAmazon['Price',])
#3. Usa el nombre de los libros como el nombre de las columnas (Hint: consulta la documentación de names, tienes que hacer algo similar a names(dataframe) <- vector de nuevos nombres)
colnames(tAmazon) <- tAmazon$Name
#3. Usa el nombre de los libros como el nombre de las columnas (Hint: consulta la documentación de names, tienes que hacer algo similar a names(dataframe) <- vector de nuevos nombres)
colnames(tAmazon) <- tAmazon$Name
View(tAmazon)
tAmazon
##
tamazon3 <- t(amazon.books)
class(tAmazon3)
class(tamazon3)
tamazon3 <- as.data.fram(tamazon3)
tamazon3 <- as.data.frame(tamazon3)
names(tamazon3) <- amazon.books$Name
View(tamazon3)
View(tamazon3)
which.max((tamazon3["Price",]))
tamazon[,70]
tamazon3[,70]
which.min(tamazon3["Price",])
tamazon3[,43]
library(DescTools)
# Si lo que deseamos es obtener la moda de un conjunto de mediciones, una
# alternativa es instalar el paquete DescTools en R mediante la instrucción
# install.packages("DescTools"), luego utilizamos la función Mode del paquete
# DescTools
install.packages("DescTools")
library(DescTools)
Mode(x) # mode es diferente de Mode (Case sensitive)
x = c(4000, 9000, 9000, 10000); mean(x)
median(x)
Mode(x) # mode es diferente de Mode (Case sensitive)
x <- c(29, 13, 62, 4, 63, 96, 1, 90, 50, 46)
sort(x)
x.sorted <- sort(x)
x.sorted
x.sorted <- sort(x, decreasing=T)
x.sorted
x.sorted <- sort(x, decreasing=F)
quantile(x, 0.25) # cuantil del 25%, calcula los valores que estan por debajo del 25%
quantile(x, c(0.25,0.50,0.75)) # Cuartiles
quantile(x, seq(0.1,0.9, by = 0.1)) # Deciles
IQR(x)
quantile(x, probs = 0.75) - quantile(x, probs = 0.25)
# La varianza y desviación estándar muestral en R las calculamos con las
# siguientes instrucciones respectivamente
#varianza
var(x)
#desviacion estandar
sd(x)
#media
mean(x)
median(x)
set.seed(134)
x <- round(rnorm(1000, 175, 6), 1)
set.seed(134)
x <- round(rnorm(1000, 175, 6), 1)
x
med(x)
mean(x)
median(x)
Mode(x)
quantile(x, seq(0.1,0.9, by = 0.1))
IQR(x)
sd(x)
var(x)
IQR(x)
min(x)
summary(x)
plot(x)
?mtcars
?iris
